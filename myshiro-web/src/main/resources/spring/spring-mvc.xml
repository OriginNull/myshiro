<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
	<!-- 在编写之中所有的控制器都一定要在action父包下面，里面可以任意定义子包，例如：action.front、action.back -->
	<context:component-scan base-package="cn.origin" />
	<dubbo:annotation package="cn.origin"/>
	<mvc:annotation-driven/>	<!-- 支持有注解的配置 -->
	<mvc:default-servlet-handler/>	<!-- 之前配置有一个DispathcerServlet控制 -->
	<mvc:interceptors>	<!-- 这里面可以配置若干个拦截器 --> 
		<mvc:interceptor>	<!-- 配置一个拦截器 -->
			<mvc:mapping path="/pages/**/*.action"/>
			<bean class="cn.origin.util.interceptor.ValidationInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置所有上传内容的最大字节数量，本次最多允许上传5M的内容 -->
		<property name="maxUploadSize" value="5242880"/>
		<!-- 设置每一个文件的最大上传量，本次设置为2M -->	
		<property name="maxUploadSizePerFile" value="2097152"/>
		<!-- 设置允许占用的内存最大字节数，本次设置为10M -->
		<property name="maxInMemorySize" value="10485760"/>	
	</bean>
	
	<!-- 定义上传出现错误之后的跳转路径 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">	<!-- 进行异常处理的映射 -->
			<props>
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">
					plugins/errors
				</prop>
				<prop key="org.apache.shiro.authz.AuthorizationException">
					plugins/errors
				</prop> 
			</props>		
		</property>	
	</bean>
	
	<!-- 进行*.properties资源配置，资源文件一定要保存在CLASSPATH之中 -->
	<bean id="messageSource" 
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">	<!-- 定义资源的名称 -->
			<array>
				<value>cn.origin.message.pages</value>
				<value>cn.origin.message.messages</value>
				<value>cn.origin.message.validations</value>
			</array>
		</property>
	</bean>
	
	<!-- 定义一个页面资源的解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/"/>
		<property name="suffix" value=".jsp"/>
	</bean>  
	
	<mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>
	<mvc:resources location="/WEB-INF/upload/" mapping="/upload/**"/>
	<mvc:resources location="/WEB-INF/images/" mapping="/images/**"/>
	<mvc:resources location="/WEB-INF/bootstrap/" mapping="/bootstrap/**"/>
	<mvc:resources location="/WEB-INF/css/" mapping="/mvccss/**"/> 
	
	
	
	<bean id="controllerDefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor" 
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<property name="proxyTargetClass" value="true"/> <!-- 开启代理操作 -->
	</bean> 
	
	<bean id="controllerAuthorizationAttributeSourceAdvisor" 
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>
